{"version":3,"sources":["components/Section/Section.module.css","components/Section/Section.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.js","index.js","components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css"],"names":["module","exports","Container","children","className","styles","section","ContactForm","state","name","number","onInputChange","event","target","setState","value","onInputReset","onFormSubmit","preventDefault","props","existingContacts","find","existingContact","alert","form","onSubmit","this","label","input","type","pattern","title","required","autoComplete","onChange","button","Component","Filter","onFilterInputChange","onFilterChange","disabled","isFilterActive","ContactList","list","contacts","map","contact","item","wrapper","onClick","onDeleteButtonClick","uid","App","filter","handleFormSubmit","user","uuidv4","handleFilterInputChange","handleDeleteContact","id","stringifiedSavedContacts","localStorage","getItem","parsedSavedContacts","JSON","parse","prevProps","prevState","setItem","stringify","filteredContacts","toLowerCase","includes","isAnyContact","length","Section","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fbf449a6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__1sQGL\"};","import styles from './Section.module.css';\r\n\r\nfunction Container({ children }) {\r\n    return (\r\n        <div className={styles.section}>{children}</div>\r\n    );\r\n}\r\n\r\nexport default Container;","import { Component } from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styles from './ContactForm.module.css';\r\n\r\nclass ContactForm extends Component {\r\n    \r\n    static propTypes = {\r\n        existingContacts: PropTypes.arrayOf(PropTypes.object),\r\n        onFormSubmit: PropTypes.func\r\n    }\r\n\r\n    state = {\r\n        name: '',\r\n        number: ''\r\n    }\r\n\r\n    onInputChange = (event) => {\r\n        const { target } = event;\r\n        this.setState({\r\n            [target.name]: target.value    \r\n        })\r\n    }\r\n\r\n    onInputReset = () => {\r\n        this.setState({\r\n            name: '',\r\n            number: ''\r\n        })\r\n    }\r\n\r\n    onFormSubmit = (event) => {\r\n        event.preventDefault();\r\n        \r\n        const existingContact = this.props.existingContacts.find(existingContact => {\r\n            return existingContact.name === this.state.name\r\n        });\r\n        if (existingContact) {\r\n            alert('Contact already exists. Try another name');\r\n            this.setState({ name: '' });\r\n            return;\r\n        }\r\n        this.props.onFormSubmit(this.state);\r\n        this.onInputReset();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form className={styles.form} onSubmit={this.onFormSubmit}>\r\n                <label className={styles.label}>\r\n                    Name\r\n                    <input\r\n                        className={styles.input}\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        value={this.state.name}\r\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                        required\r\n                        autoComplete=\"off\"\r\n                        onChange={this.onInputChange}\r\n                    />\r\n                </label>\r\n                <label className={styles.label}>\r\n                    Number\r\n                    <input\r\n                        className={styles.input}\r\n                        type=\"tel\"\r\n                        name=\"number\"\r\n                        value={this.state.number}\r\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                        required\r\n                        autoComplete=\"off\"\r\n                        onChange={this.onInputChange}\r\n                    />\r\n                </label>\r\n                <button className={styles.button} type=\"submit\">Add a contact</button>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ContactForm;","import { Component } from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styles from './Filter.module.css';\r\n\r\nclass Filter extends Component {\r\n\r\n    static propTypes = {\r\n        onFilterChange: PropTypes.func\r\n    }\r\n\r\n    onFilterInputChange = (event) => {\r\n        const { target } = event;\r\n        this.props.onFilterChange(target.value);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <label className={styles.label}>\r\n                Find contacts by name\r\n                <input\r\n                    className={styles.input}\r\n                    type=\"text\"\r\n                    name=\"filter\"\r\n                    autoComplete=\"off\"\r\n                    disabled={!this.props.isFilterActive}\r\n                    onChange={this.onFilterInputChange}\r\n                />\r\n            </label>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Filter;","import { Component } from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styles from './ContactList.module.css';\r\n\r\nclass ContactList extends Component {\r\n    \r\n    static propTypes = {\r\n        contacts: PropTypes.arrayOf(PropTypes.object),\r\n        onDeleteButtonClick: PropTypes.func\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ul className={styles.list}>\r\n                {this.props.contacts.map(contact => {\r\n                    return (\r\n                        <li className={styles.item} key={contact.uid}>\r\n                            <div className={styles.wrapper}>\r\n                            <p className={styles.name}>{contact.name}</p>\r\n                            <span className={styles.number}>{contact.number}</span>\r\n                            <button className={styles.button} onClick={() => this.props.onDeleteButtonClick(contact.uid)}>Delete</button>\r\n                            </div>\r\n                        </li>\r\n                    );\r\n                })}\r\n            </ul>\r\n        );\r\n   } \r\n}\r\n\r\nexport default ContactList;","import { Component, Fragment } from \"react\";\nimport { v4 as uuidv4 } from 'uuid';\n\nimport Section from \"./components/Section\";\nimport ContactForm from \"./components/ContactForm\";\nimport Filter from './components/Filter';\nimport ContactList from \"./components/ContactList\";\n\nclass App extends Component {\n\n  state = {\n    contacts: [],\n    filter: ''\n  }\n  \n  componentDidMount() {\n    const stringifiedSavedContacts = localStorage.getItem('savedContacts');\n    const parsedSavedContacts = JSON.parse(stringifiedSavedContacts);\n\n    if (parsedSavedContacts) {\n      this.setState({ contacts: parsedSavedContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { contacts } = this.state;\n\n    if (contacts !== prevState.contacts) {\n      localStorage.setItem('savedContacts', JSON.stringify(contacts));\n    }\n  }\n\n  handleFormSubmit = (user) => {\n    const uid = uuidv4();\n    const name = user.name;\n    const number = user.number;\n\n    const contact = { uid, name, number };\n    this.setState(({contacts}) => {\n      return {\n        contacts: [contact, ...contacts]\n      }\n    });\n  }\n\n  handleFilterInputChange = (value) => {\n    this.setState({ filter: value });\n  }\n\n  handleDeleteContact = (id) => {\n    this.setState(({ contacts }) => {\n      return {contacts: contacts.filter(contact => contact.uid !== id)}\n    })\n  }\n\n  render() {\n    const filteredContacts = this.state.contacts.filter(contact => {\n      return contact.name.toLowerCase().includes(this.state.filter.toLowerCase())\n    })\n    const isAnyContact = this.state.contacts.length > 0;\n    \n    return (\n      <Fragment>\n        <Section>\n        <h1 className=\"\">Phonebook</h1>\n        <ContactForm\n          onFormSubmit={this.handleFormSubmit}\n          existingContacts ={this.state.contacts}\n        />\n        </Section>\n        <Section>\n        <h2 className=\"\">Contacts</h2>\n        <Filter\n          onFilterChange={this.handleFilterInputChange}\n          isFilterActive={isAnyContact}  \n        />\n        <ContactList\n          contacts={filteredContacts}\n          onDeleteButtonClick={this.handleDeleteContact}\n        />\n        </Section>\n      </Fragment>\n    );\n  }  \n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__LwE0m\",\"label\":\"ContactForm_label__3qoiM\",\"input\":\"ContactForm_input__3D6Dw\",\"button\":\"ContactForm_button__189kY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__1rGnc\",\"wrapper\":\"ContactList_wrapper__3j1Mw\",\"item\":\"ContactList_item__2qb78\",\"button\":\"ContactList_button__2bgnE\",\"name\":\"ContactList_name__jBN5D\",\"number\":\"ContactList_number__2KxbK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__2kUWq\",\"input\":\"Filter_input__11-hU\"};"],"sourceRoot":""}